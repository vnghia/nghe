name: Main

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            command: cargo
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            command: cross
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            command: cross
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            command: cross

    runs-on: ${{ matrix.platform.os }}

    env:
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/postgres"
      CROSS_CONTAINER_OPTS: "--network=host"

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: md5
          POSTGRES_INITDB_ARGS: --auth-host=md5
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      - uses: cargo-bins/cargo-binstall@main
      - name: Install cross
        run: cargo binstall cross --no-confirm
      - name: Build and test
        run: ${{ matrix.platform.command }} test --locked --target ${{ matrix.platform.target }}

  # TODO: setup postgres instance for testing
  build-windows:
    runs-on: windows-latest

    env:
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

    steps:
      - uses: actions/checkout@v4
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
      - name: Install libpq
        run: vcpkg install libpq[core]:x64-windows-release
      - name: Build
        run: cargo build --locked --target x86_64-pc-windows-msvc

  # TODO: setup postgres instance for testing
  build-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --locked --target x86_64-apple-darwin
