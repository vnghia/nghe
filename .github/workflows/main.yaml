name: Main

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - target: x86_64-unknown-linux-gnu
            command: cargo
          - target: aarch64-unknown-linux-gnu
            command: cross
          - target: x86_64-unknown-linux-musl
            command: cross
          - target: aarch64-unknown-linux-musl
            command: cross

    runs-on: ubuntu-latest

    env:
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/postgres"
      CROSS_CONTAINER_OPTS: "--network=host"

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: md5
          POSTGRES_INITDB_ARGS: --auth-host=md5
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      - uses: cargo-bins/cargo-binstall@main
      - name: Install cross
        run: cargo binstall cross --no-confirm
      - name: Build and test
        run: ${{ matrix.platform.command }} test --locked --target ${{ matrix.platform.target }}

  build-windows:
    runs-on: windows-latest

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - uses: actions/checkout@v4
      - name: Install postgres
        run: |
          choco install postgresql16 --force --params '/Password:root'
          echo "PQ_LIB_DIR=C:\Program Files\PostgreSQL\16\lib" >> $GITHUB_ENV
      - name: Build and test
        run: cargo test --locked --target x86_64-pc-windows-msvc

  build-macos:
    runs-on: macos-latest

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - uses: actions/checkout@v4
      - name: Build and test
        run: cargo test --locked --target x86_64-apple-darwin
